{"ast":null,"code":"var _jsxFileName = \"/home/nggasnik/Downloads/weather_api_project_tutorial-main/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const [city, setCity] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const unitTypeSymbol = {\n    'imperial': '째F',\n    'metric': '째C',\n    '': 'K'\n  };\n\n  //set unit type\n  const unitType = 'imperial';\n  // const unitType = '';\n  // const unitType = 'metric';\n\n  //Make api call to openweathermap api\n  async function getWeatherData() {\n    try {\n      setError();\n      setWeatherData([]);\n      setLoading(true);\n\n      //get longitude and latitude based on city that user inputs\n      let resp = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=5&appid=49683f3f5afad3b6c0d3dd5c3b1a9028`);\n      const lat = resp.data[0].lat;\n      const long = resp.data[0].lon;\n\n      //set your api key here\n      const apiKey = '';\n\n      //Make weather api call using axios\n      const weatherData = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=35&lon=139&appid=0f1ffbc1919a0ee7bbeb3086967d05b9&units=imperial`);\n      setWeatherData(weatherData.data.list);\n    } catch (e) {\n      console.log(47, e);\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 min-vh-100 d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              setCity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"ms-2\",\n            onClick: getWeatherData,\n            variant: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), ' ', error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: \"Can't find city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mt-3\",\n            children: [\"  Weather in \", city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), weatherData.map((weatherData, index) => /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-3 shadow border-0 mt-3 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: weatherData.dt_txt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Current: \", weatherData.main.temp, \" \", unitTypeSymbol[unitType]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: weatherData.weather[0].main\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Feels like  \", weatherData.main.feels_like, \" \", unitTypeSymbol[unitType]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"Em8EN0whUVk9OiJ4dXaT1ZNZELk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","Card","Container","Row","Col","Button","Spinner","App","weatherData","setWeatherData","city","setCity","loading","setLoading","error","setError","unitTypeSymbol","unitType","getWeatherData","resp","get","lat","data","long","lon","apiKey","list","e","console","log","target","value","map","index","dt_txt","main","temp","weather","icon","feels_like"],"sources":["/home/nggasnik/Downloads/weather_api_project_tutorial-main/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction App() {\n\n  const [weatherData, setWeatherData] = useState([]);\n  const [city, setCity] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const unitTypeSymbol = {\n    'imperial': '째F',\n    'metric': '째C',\n    '': 'K',\n  };\n\n  //set unit type\n  const unitType = 'imperial';\n  // const unitType = '';\n  // const unitType = 'metric';\n\n\n  //Make api call to openweathermap api\n  async function getWeatherData() {\n    try {\n      setError();\n      setWeatherData([]);\n      setLoading(true);\n\n      //get longitude and latitude based on city that user inputs\n      let resp = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=5&appid=49683f3f5afad3b6c0d3dd5c3b1a9028`);\n      const lat = resp.data[0].lat;\n      const long = resp.data[0].lon;\n\n      //set your api key here\n      const apiKey = '';\n\n      //Make weather api call using axios\n      const weatherData = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=35&lon=139&appid=0f1ffbc1919a0ee7bbeb3086967d05b9&units=imperial`);\n      setWeatherData(weatherData.data.list);\n\n    } catch (e) {\n      console.log(47, e);\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n\n  }\n\n\n\n  return (\n    <>\n\n      {loading ?\n        <div className='w-100 min-vh-100 d-flex justify-content-center align-items-center'>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </div>\n        : <Container>\n          <Row className=\"d-flex\">\n            <div className='text-center mt-5'>\n              <input onChange={(e) => { setCity(e.target.value) }} />\n              <Button className='ms-2' onClick={getWeatherData} variant=\"primary\">Submit</Button>{' '}\n\n              {error ? <div className='text-danger'>\n                Can't find city\n              </div> : <h3 className='mt-3'>  Weather in {city}\n              </h3>}\n            </div>\n\n            {weatherData.map((weatherData, index) =>\n              <Col sm={4} className=\"mt-3\" key={index}>\n                <Card className=\"p-3 shadow border-0 mt-3 rounded\">\n                  <div className='d-flex justify-content-between'>\n                    <div>\n                      {weatherData.dt_txt}\n                    </div>\n                    <div>\n\n                      Current: {weatherData.main.temp} {unitTypeSymbol[unitType]}\n                    </div>\n                  </div>\n                  <div className=\"d-flex justify-content-center\">\n                    <img src={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`} />\n                  </div>\n                  <div className='d-flex justify-content-between'>\n                    <div>\n                      {weatherData.weather[0].main}\n                    </div>\n                    <div>\n                      Feels like  {weatherData.main.feels_like} {unitTypeSymbol[unitType]}\n                    </div>\n                  </div>\n                </Card>\n              </Col>\n            )}\n          </Row>\n\n        </Container>\n      }\n\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}